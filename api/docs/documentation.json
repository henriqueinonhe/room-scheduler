{
  "openapi": "3.0.3",
  "info": {
    "title": "Room Scheduler API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:31414"
    }
  ],
  "security": [
    {
      "SessionAuthentication": []
    }
  ],
  "paths": {
    "/check": {
      "summary": "API health check",
      "description": "Convenience endpoint to check whether the API is up and accessible",
      "get": {
        "tags": [
          "Test"
        ],
        "security": [{}],
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "summary": "Users",
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userName",
            "description": "User name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "description": "User role",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/CreatedBeforeParameter"
          },
          {
            "$ref": "#/components/parameters/CreatedAfterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserSchema"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMetadataSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [{}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSchema"
                  }
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/InvalidDataErrorResponse"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundErrorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "422": {
            "$ref": "#/components/responses/InvalidDataErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          }
        }
      }
    },
    "/users/{id}/allocations": {
      "get": {
        "tags": ["Allocations"],
        "description": "Retrieves user allocations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/StartDateAfterParameter"
          },
          {
            "$ref": "#/components/parameters/StartDateBeforeParameter"
          },
          {
            "name": "roomName",
            "in": "query",
            "description": "Room name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allocations fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllocationSchema"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMetadataSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundErrorResponse"
          }
        }
      }
    },
    "/rooms": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Room name",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/CreatedBeforeParameter"
          },
          {
            "$ref": "#/components/parameters/CreatedAfterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Rooms fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoomSchema"
                      }
                    },
                    "meta": {
                      "$ref":  "#/components/schemas/PaginationMetadataSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "422": {
            "$ref": "#/components/responses/InvalidDataErrorResponse"
          }
        }
      }
    },
    "/rooms/{id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Room fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/RoomSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundErrorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "422": {
            "$ref": "#/components/responses/InvalidDataErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Room delete successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/RoomSchema"
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          }
        }
      }
    },
    "/rooms/{id}/allocations": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "description": "Fetch room allocations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/StartDateAfterParameter"
          },
          {
            "$ref": "#/components/parameters/StartDateBeforeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Allocations fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref":  "#/components/schemas/AllocationSchema"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMetadataSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref":  "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "404": {
            "$ref":  "#/components/responses/NotFoundErrorResponse"
          }
        }
      }
    },
    "/allocations": {
      "summary": "Allocations",
      "get": {
        "tags": [
          "Allocations"
        ],
        "description": "Fetches allocations",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "description": "User name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomName",
            "in": "query",
            "description": "Room name",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref":  "#/components/parameters/StartDateAfterParameter"
          },
          {
            "$ref": "#/components/parameters/StartDateBeforeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Allocations fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllocationSchema"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMetadataSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          }
        }
      },
      "post": {
        "description": "Create new allocation",
        "tags": [
          "Allocations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roomId": {
                    "type": "number"
                  },
                  "userId": {
                    "type": "number"
                  },
                  "startDate": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Allocation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref":  "#/components/responses/AuthorizationErrorResponse"
          },
          "422": {
            "$ref":  "#/components/responses/InvalidDataErrorResponse"
          }
        }
      }
    },
    "/allocations/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Allocation id",
          "schema": {
            "type": "number"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Allocations"
        ],
        "description": "Fetch allocation by id",
        "responses": {
          "200": {
            "description": "Allocation fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/AllocationSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationErrorResponse"
          },
          "404": {
            "$ref":  "#/components/responses/NotFoundErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Allocations"
        ],
        "description": "Delete allocation",
        "responses": {
          "200": {
            "description": "Allocation deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          },
          "403": {
            "$ref":  "#/components/responses/AuthorizationErrorResponse"
          }
        }
      }
    },
    "/authentication/login": {
      "summary": "Login",
      "post": {
        "tags": [
          "Authentication"
        ],
        "security": [
          {}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "headers": {
              "Set-Cookie": {
                "description": "Setting session id as cookie",
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseContentSchema"
                }
              }
            }
          }
        }
      }
    },
    "/authentication/logout": {
      "summary": "Logout",
      "get": {
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "headers": {
              "Set-Cookie": {
                "description": "Unsetting session id cookie",
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          }
        }
      }
    },
    "/authentication/session": {
      "summary": "Login using session",
      "get": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "description": "Session ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponseContentSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "code": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "RoomSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "AllocationSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "startDate": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "room": {
            "$ref": "#/components/schemas/RoomSchema"
          }
        }
      },
      "PaginationMetadataSchema": {
        "type": "object",
        "properties": {
          "perPage": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "currentPage": {
            "type": "number"
          }
        }
      }
    },
    "responses": {
      "InternalServerErrorResponse": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseContentSchema"
            }
          }
        }
      },
      "AuthorizationErrorResponse": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseContentSchema"
            }
          }
        }
      },
      "AuthenticationErrorResponse": {
        "description": "Authentication failure",
        "content": {
          "application/json": {
            "schema": {
              "$ref":  "#/components/schemas/ErrorResponseContentSchema"
            }
          }
        }
      },
      "NotFoundErrorResponse": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref":  "#/components/schemas/ErrorResponseContentSchema"
            }
          }
        }
      },
      "InvalidDataErrorResponse": {
        "description": "Invalid data",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorResponseContentSchema"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "CreatedBeforeParameter": {
        "in": "query",
        "name": "createdBefore",
        "description": "Created at upper bound",
        "schema": {
          "type": "string"
        }
      },
      "CreatedAfterParameter": {
        "in": "query",
        "name": "createdAfter",
        "description": "Created at lower bound",
        "schema": {
          "type": "string"
        }
      },
      "DateParameter": {
        "in": "query",
        "name": "date",
        "description": "Date",
        "schema": {
          "type": "string"
        }
      },
      "StartDateAfterParameter": {
        "in": "query",
        "name": "startDateAfter",
        "description": "Start date lower bound",
        "schema": {
          "type": "string"
        }
      },
      "StartDateBeforeParameter": {
        "in": "query",
        "name": "startDateBefore",
        "description": "Start date upper bound",
        "schema": {
          "type" : "string"
        }
      }
    },
    "securitySchemes": {
      "SessionAuthentication": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionId"
      }
    }
  }
}